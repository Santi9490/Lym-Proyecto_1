/* Generated By:JavaCC: Do not edit this line. RobotConstants.java */
package uniandes.lym.robot.control;


/**
 * Token literal values and constants.
 * Generated by org.javacc.parser.OtherFilesGen#start()
 */
public interface RobotConstants {

  /** End of File. */
  int EOF = 0;
  /** RegularExpression Id. */
  int MOV = 5;
  /** RegularExpression Id. */
  int RIGHT = 6;
  /** RegularExpression Id. */
  int PUT = 7;
  /** RegularExpression Id. */
  int PICK = 8;
  /** RegularExpression Id. */
  int POP = 9;
  /** RegularExpression Id. */
  int GO = 10;
  /** RegularExpression Id. */
  int HOP = 11;
  /** RegularExpression Id. */
  int BALLOONS = 12;
  /** RegularExpression Id. */
  int CHIPS = 13;
  /** RegularExpression Id. */
  int WALK = 14;
  /** RegularExpression Id. */
  int LEAP = 15;
  /** RegularExpression Id. */
  int TURN = 16;
  /** RegularExpression Id. */
  int TURNTO = 17;
  /** RegularExpression Id. */
  int DROP = 18;
  /** RegularExpression Id. */
  int GET = 19;
  /** RegularExpression Id. */
  int GRAP = 20;
  /** RegularExpression Id. */
  int LETGO = 21;
  /** RegularExpression Id. */
  int NOP = 22;
  /** RegularExpression Id. */
  int IF = 23;
  /** RegularExpression Id. */
  int ELSE = 24;
  /** RegularExpression Id. */
  int WHILE = 25;
  /** RegularExpression Id. */
  int REPEAT = 26;
  /** RegularExpression Id. */
  int TIMES = 27;
  /** RegularExpression Id. */
  int CAN = 28;
  /** RegularExpression Id. */
  int FACING = 29;
  /** RegularExpression Id. */
  int NOT = 30;
  /** RegularExpression Id. */
  int LETRA = 31;
  /** RegularExpression Id. */
  int DIGIT = 32;
  /** RegularExpression Id. */
  int NUM = 33;
  /** RegularExpression Id. */
  int VAR = 34;

  /** Lexical state. */
  int DEFAULT = 0;

  /** Literal token values. */
  String[] tokenImage = {
    "<EOF>",
    "\" \"",
    "\"\\r\"",
    "\"\\t\"",
    "\"\\n\"",
    "\"Mov\"",
    "\"RIGHT\"",
    "\"Put\"",
    "\"Pick\"",
    "\"Pop\"",
    "\"GO\"",
    "\"HOP\"",
    "\"BALLOONS\"",
    "\"CHIPS\"",
    "\"Walk\"",
    "\"Leap\"",
    "\"turn\"",
    "\"Turnto\"",
    "\"Drop\"",
    "\"Get\"",
    "\"Grap\"",
    "\"Letgo\"",
    "\"nop\"",
    "\"If\"",
    "\"Else\"",
    "\"While\"",
    "\"Repeat\"",
    "\"Times\"",
    "\"Can\"",
    "\"Facing\"",
    "\"Not\"",
    "<LETRA>",
    "<DIGIT>",
    "<NUM>",
    "<VAR>",
    "\"(\"",
    "\")\"",
    "\",\"",
    "\";\"",
  };

}
